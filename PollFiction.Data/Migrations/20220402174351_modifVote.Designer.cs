// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PollFiction.Data;

namespace PollFiction.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220402174351_modifVote")]
    partial class modifVote
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PollFiction.Data.Model.Choice", b =>
                {
                    b.Property<int>("ChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChoiceText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberVote")
                        .HasColumnType("int");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.HasKey("ChoiceId");

                    b.HasIndex("PollId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("PollFiction.Data.Model.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuestMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuestId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("PollFiction.Data.Model.GuestChoice", b =>
                {
                    b.Property<int>("GuestChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChoiceId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.HasKey("GuestChoiceId");

                    b.HasIndex("ChoiceId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestChoices");
                });

            modelBuilder.Entity("PollFiction.Data.Model.Poll", b =>
                {
                    b.Property<int>("PollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PollDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PollDisable")
                        .HasColumnType("bit");

                    b.Property<string>("PollLinkAccess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PollLinkDisable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PollLinkStat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PollMultiple")
                        .HasColumnType("bit");

                    b.Property<string>("PollTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Polldate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PollId");

                    b.HasIndex("UserId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("PollFiction.Data.Model.PollGuest", b =>
                {
                    b.Property<int>("PollGuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.HasKey("PollGuestId");

                    b.HasIndex("GuestId");

                    b.HasIndex("PollId");

                    b.ToTable("PollGuests");
                });

            modelBuilder.Entity("PollFiction.Data.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPseudo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPwd")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserUuidCookie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PollFiction.Data.Model.Choice", b =>
                {
                    b.HasOne("PollFiction.Data.Model.Poll", "Poll")
                        .WithMany("Choices")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("PollFiction.Data.Model.GuestChoice", b =>
                {
                    b.HasOne("PollFiction.Data.Model.Choice", "Choice")
                        .WithMany("GuestChoices")
                        .HasForeignKey("ChoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PollFiction.Data.Model.Guest", "Guest")
                        .WithMany("GuestChoices")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Choice");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("PollFiction.Data.Model.Poll", b =>
                {
                    b.HasOne("PollFiction.Data.Model.User", "User")
                        .WithMany("Polls")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PollFiction.Data.Model.PollGuest", b =>
                {
                    b.HasOne("PollFiction.Data.Model.Guest", "Guest")
                        .WithMany("PollGuests")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PollFiction.Data.Model.Poll", "Poll")
                        .WithMany("PollGuests")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("PollFiction.Data.Model.Choice", b =>
                {
                    b.Navigation("GuestChoices");
                });

            modelBuilder.Entity("PollFiction.Data.Model.Guest", b =>
                {
                    b.Navigation("GuestChoices");

                    b.Navigation("PollGuests");
                });

            modelBuilder.Entity("PollFiction.Data.Model.Poll", b =>
                {
                    b.Navigation("Choices");

                    b.Navigation("PollGuests");
                });

            modelBuilder.Entity("PollFiction.Data.Model.User", b =>
                {
                    b.Navigation("Polls");
                });
#pragma warning restore 612, 618
        }
    }
}
