@model PollFiction.Services.Models.VotePollViewModel

@{
    ViewData["Title"] = "Vote au sondage " + Model.Poll.PollTitle;
}

<h4>@Model.Poll.PollTitle</h4>
<hr />
<div class="container">
    <div class="container-form">
        <h5>Description</h5>
        <p>
            @Model.Poll.PollDescription
        </p>
    </div>
    <div class="container-form">
        <form asp-action="Vote" >

            @{
                

                foreach(var choice in Model.Choices)
                {
                    string check = string.Empty;

                    if (@choice.GuestChoices.Count != 0)
                    {
                        check = "checked";
                    }

                    if (!Model.Poll.PollMultiple)
                    {
                        <input type="radio" name="ChoiceId" value="@choice.ChoiceId" id="choice.ChoiceId" @check/>
                        <span>
                            <label for="@choice.ChoiceId" > @choice.ChoiceText</label>
                        </span>
                        <br />
                    }
                    else
                    {
                        <input type="checkbox" name="CheckChoice" value="@choice.ChoiceId" id="@choice.ChoiceId" @check/> 
                        <span>
                            <label for="@choice.ChoiceId" > @choice.ChoiceText</label>
                        </span>
                        <br />
                    }
                }
            }
            <input type="hidden" name="PollId" value="@Model.Poll.PollId" />
            <input type="hidden" name="GuestId" value="@Model.GuestId" />
            <div class="form-group">
                <input type="submit" value="Voter !" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Dashboard">Revenir au tableau de bord</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
