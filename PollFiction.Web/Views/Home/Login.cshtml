@model PollFiction.Web.Models.LoginViewModel

@{
    ViewData["Title"] = "Identification";
}

<h1>Identification</h1>

<hr />
<div class="container">
    <div class="container-form">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Pseudo" class="control-label"></label>
                <input asp-for="Pseudo" class="form-control" />
                <span asp-validation-for="Pseudo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" name="ReturnUrl" id="ReturnUrl" value="@Model.ReturnUrl" />
            </div>

            <div class="custom-control custom-switch">
                <input type="checkbox" class="custom-control-input" asp-for="RememberMe" id="customSwitch1" />
                <label class="custom-control-label" for="customSwitch1">
                     @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Identifier" class="btn btn-primary" />
            </div>

            @if(!string.IsNullOrEmpty(@Model.Error))
            {
                <div class="error">
                    <p>
                        @Model.Error
                    </p>
                </div>
            }
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Revenir au la page d'accueil</a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
